# Note, this is used in the badge URL!
name: build

on:
  push:
    branches: [dev, master]
    paths:
      [
        "**.rs",
        "Cargo.toml",
        "Cargo.lock",
        "rustfmt.toml",
        ".github/workflows/*",
        "!*.md",
        "!contrib/*",
        "!docs/*",
        "!LICENSE",
        "!*.sh",
      ]
  pull_request:
    paths:
      [
        "**.rs",
        "Cargo.toml",
        "Cargo.lock",
        "rustfmt.toml",
        ".github/workflows/*",
        "!*.md",
        "!contrib/*",
        "!docs/*",
        "!LICENSE",
        "!*.sh",
      ]
  schedule:
    # Run CI every week
    - cron: "00 01 * * 0"
  workflow_dispatch:
env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings

# The layering here is as follows:
#  1. code formatting
#  2. absence of lints
#  3. absence of errors and warnings on Linux/x86
#  4. cross compilation on Windows and Linux/ARM

jobs:
  build-windows:
    name: cargo +stable build (windows-latest)
    runs-on: windows-latest
    continue-on-error: false
    strategy:
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0
    
      # hyper-rustls >=0.27 uses aws-lc as default backend which requires NASM to build
      - name: Install NASM
        uses: ilammy/setup-nasm@v1.5.1

      - name: Install toolchain
        run: curl https://sh.rustup.rs -sSf | sh -s -- --profile minimal --default-toolchain stable  -y

      - name: Get Rustc version
        id: get-rustc-version
        run: echo "version=$(rustc -V)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Rust dependencies
        uses: actions/cache@v4.0.2
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ steps.get-rustc-version.outputs.version }}-${{ hashFiles('Cargo.lock') }}

      - run: cargo fetch --locked
      - run: cargo build --frozen --release

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: librespot.exe
          path: ./target/release/librespot.exe